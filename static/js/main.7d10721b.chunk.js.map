{"version":3,"sources":["components/table.tsx","api.ts","App.tsx","index.tsx"],"names":["Table","people","getPersonLink","name","person","find","p","href","slug","className","map","window","location","hash","sex","born","died","mother","father","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","App","useState","activePage","setActivePage","setPeople","error","setError","useEffect","data","role","to","onClick","path","createRoot","document","getElementById","render"],"mappings":"+OAQaA,EAAyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjCC,EAAgB,SAACC,GACrB,IAAMC,EAASH,EAAOI,MAAK,SAACC,GAAD,OAAOA,EAAEH,OAASA,CAAlB,IAE3B,OAAOC,EAAS,mBAAGG,KAAI,mBAAcH,EAAOI,MAA5B,SAAqCL,IAAYA,CAClE,EAED,OACE,wBACE,UAAQ,cACRM,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGR,EAAOS,KAAI,SAACJ,GAAD,OACV,qBACE,UAAQ,SAERG,UAAWE,OAAOC,SAASC,OAAhB,mBAAqCP,EAAEE,MAAS,yBAA2B,GAHxF,UAKE,6BACE,mBAAGD,KAAI,mBAAcD,EAAEE,MAAvB,SAAgCF,EAAEH,SAEpC,6BAAKG,EAAEQ,MACP,6BAAKR,EAAES,OACP,6BAAKT,EAAEU,OACP,6BAAKV,EAAEW,OAASf,EAAcI,EAAEW,OAAOd,MAAQ,MAC/C,6BAAKG,EAAEY,OAAShB,EAAcI,EAAEY,OAAOf,MAAQ,QAV1CG,EAAEE,KAHC,QAmBnB,EC1CM,SAASW,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCLM,IAAMQ,EAAgB,WAC3B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAAmB,IAA/C,mBAAO5B,EAAP,KAAe+B,EAAf,KACA,EAA0BH,mBAAwB,MAAlD,mBAAOI,EAAP,KAAcC,EAAd,KAgBA,OAdAC,qBAAU,WACW,WAAfL,GACFX,IACGK,MAAK,SAAAY,GACJJ,EAAUI,GACVF,EAAS,KACV,IAGDjC,GACFiC,EAAS,sBAEZ,GAAE,CAACJ,IAGF,cAAC,IAAD,UACE,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRrB,UAAU,iCACV4B,KAAK,aACL,aAAW,kBAJb,SAME,qBAAK5B,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAS,sBAAgC,SAAfqB,EAAwB,8BAAgC,IAClFQ,GAAG,IACHC,QAAS,kBAAMR,EAAc,OAApB,EAHX,kBAQA,cAAC,IAAD,CACEtB,UAAS,sBAAgC,WAAfqB,EAA0B,8BAAgC,IACpFQ,GAAG,UACHC,QAAS,kBAAMR,EAAc,SAApB,EAHX,2BAWN,sBAAMtB,UAAU,UAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAO+B,KAAK,UAAZ,SACE,qBAAK/B,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,QAAd,yBACCwB,EACC,mBAAGxB,UAAU,kBAAb,SAAgCwB,IAEhC,cAAC,EAAD,CAAOhC,OAAQA,WAMvB,cAAC,IAAD,CAAOuC,KAAK,IAAZ,SACE,oBAAI/B,UAAU,QAAd,yBAGF,cAAC,IAAD,UACE,oBAAIA,UAAU,QAAd,uCAOb,EC7EDgC,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.7d10721b.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { Person } from '../types';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const Table: React.FC<Props> = ({ people }) => {\n  const getPersonLink = (name: string) => {\n    const person = people.find((p) => p.name === name);\n\n    return person ? <a href={`#/people/${person.slug}`}>{name}</a> : name;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((p) => (\n          <tr\n            data-cy=\"person\"\n            key={p.slug}\n            className={window.location.hash === `#/people/${p.slug}` ? 'has-background-warning' : ''}\n          >\n            <td>\n              <a href={`#/people/${p.slug}`}>{p.name}</a>\n            </td>\n            <td>{p.sex}</td>\n            <td>{p.born}</td>\n            <td>{p.died}</td>\n            <td>{p.mother ? getPersonLink(p.mother.name) : '-'}</td>\n            <td>{p.father ? getPersonLink(p.father.name) : '-'}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  HashRouter, Route, NavLink,\n} from 'react-router-dom';\nimport './App.scss';\nimport { Table } from './components/table';\nimport { getPeople } from './api';\nimport { Person } from './types';\n\nexport const App: React.FC = () => {\n  const [activePage, setActivePage] = useState('');\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (activePage === 'people') {\n      getPeople()\n        .then(data => {\n          setPeople(data);\n          setError(null);\n        });\n    }\n\n    if (people) {\n      setError('could not load data');\n    }\n  }, [activePage]);\n\n  return (\n    <HashRouter>\n      <div data-cy=\"app\">\n        <nav\n          data-cy=\"nav\"\n          className=\"navbar is-fixed-top has-shadow\"\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"container\">\n            <div className=\"navbar-brand\">\n              <NavLink\n                className={`navbar-item ${activePage === 'home' ? 'has-background-grey-lighter' : ''}`}\n                to=\"/\"\n                onClick={() => setActivePage('home')}\n              >\n                Home\n              </NavLink>\n\n              <NavLink\n                className={`navbar-item ${activePage === 'people' ? 'has-background-grey-lighter' : ''}`}\n                to=\"/people\"\n                onClick={() => setActivePage('people')}\n              >\n                People\n              </NavLink>\n            </div>\n          </div>\n        </nav>\n\n        <main className=\"section\">\n          <div className=\"container\">\n            <Route path=\"/people\">\n              <div className=\"block\">\n                <div className=\"box table-container\">\n                  <h1 className=\"title\">People Page</h1>\n                  {error ? (\n                    <p className=\"has-text-danger\">{error}</p>\n                  ) : (\n                    <Table people={people} />\n                  )}\n                </div>\n              </div>\n            </Route>\n\n            <Route path=\"/\">\n              <h1 className=\"title\">Home Page</h1>\n            </Route>\n\n            <Route>\n              <h1 className=\"title\">Page not found</h1>\n            </Route>\n          </div>\n        </main>\n      </div>\n    </HashRouter>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}